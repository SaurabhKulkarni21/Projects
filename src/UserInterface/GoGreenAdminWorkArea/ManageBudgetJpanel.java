/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.GoGreenAdminWorkArea;

import Business.BudgetData.Budget;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.GoGreenEnterprise;
import Business.Events.Event;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.WorkRequest;
import UserInterface.EventWorkArea.AddEventsWorkArea;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saurabhkulkarni
 */
public class ManageBudgetJpanel extends javax.swing.JPanel {

    /** Creates new form ManageBudgetJpanel */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private GoGreenEnterprise goGreenEnterprise;
    private ArrayList<Event> tempEventList;
    private int totalEventBudget;
    private int totalEventBudgetOfOrg;
    public ManageBudgetJpanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.goGreenEnterprise = (GoGreenEnterprise)enterprise;
        populateOrgTypeComboBox();
        //populateEventList();
        disableAllButtons();
        //populateTable();
        tempEventList = new ArrayList<>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        approvedBudgetLbl = new javax.swing.JLabel();
        additionalBudgetLbl = new javax.swing.JLabel();
        txtApprovedBudget = new javax.swing.JTextField();
        txtAdditionalBudget = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventTable = new javax.swing.JTable();
        submitBtn = new javax.swing.JButton();
        addEventBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        comboEvent = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btnRemoveEvent = new javax.swing.JButton();
        comboOrgType = new javax.swing.JComboBox();
        btnAddEvent = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("ORGANIZATION NAME");

        approvedBudgetLbl.setText("Approved Budget:");

        additionalBudgetLbl.setText("Total event budget");

        txtApprovedBudget.setEditable(false);

        txtAdditionalBudget.setEditable(false);

        eventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organisation", "EventId", "Event Name", "Budget Required"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(eventTable);

        submitBtn.setBackground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        addEventBtn.setBackground(new java.awt.Color(255, 255, 255));
        addEventBtn.setText("Create new Event");
        addEventBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        comboEvent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        comboEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEventActionPerformed(evt);
            }
        });

        jLabel2.setText("Select an event to add");

        btnRemoveEvent.setBackground(new java.awt.Color(255, 255, 255));
        btnRemoveEvent.setText("Remove Event");
        btnRemoveEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveEventActionPerformed(evt);
            }
        });

        comboOrgType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        comboOrgType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOrgTypeActionPerformed(evt);
            }
        });

        btnAddEvent.setText("Add Event");
        btnAddEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(approvedBudgetLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(comboOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboEvent, 0, 211, Short.MAX_VALUE)
                                    .addComponent(txtApprovedBudget))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(additionalBudgetLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(backBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRemoveEvent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(submitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAdditionalBudget)
                                .addComponent(addEventBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))))
                    .addComponent(btnAddEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApprovedBudget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approvedBudgetLbl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddEvent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdditionalBudget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(additionalBudgetLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveEvent)
                    .addComponent(addEventBtn))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBtn)
                    .addComponent(backBtn))
                .addContainerGap(159, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateOrgTypeComboBox(){
        for(WorkRequest request : goGreenEnterprise.getWorkQueue().getWorkRequestlist()){   
            for(Budget budget : request.getBudgetList()){
                comboOrgType.addItem(budget.getOrgName().toString());   
            }
        }
    }
    
    public void disableAllButtons(){
        comboEvent.setEnabled(false);
        btnRemoveEvent.setEnabled(false);
        submitBtn.setEnabled(false);
        addEventBtn.setEnabled(false);
    }
    
    
    public void populateEventList(){
        comboEvent.addItem("Select");
       // System.out.println("Event list size: "+business.getEventDirectory().getEventList().size());
        for(Event event: business.getEventDirectory().getEventList()){
            if(comboOrgType.getSelectedItem().toString().equalsIgnoreCase(event.getOrganisationOfEvent())){
            comboEvent.addItem(event.getEventName().toString())  ;
            }
        }
        
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)eventTable.getModel();
        model.setRowCount(0);
        for(Event event : tempEventList){
                Object[] row = new Object[4];
                row[1] = event.getEventID();
                row[2] = event.getEventName();
                row[3] = event.getEventBudget();
                row[0] = event.getOrganisationOfEvent();
                model.addRow(row); 
        }
        
    }
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addEventBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventBtnActionPerformed
        AddEventsWorkArea panel = new AddEventsWorkArea(userProcessContainer,business);
        userProcessContainer.add("AddEventsWorkArea", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addEventBtnActionPerformed

 
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed

        for(WorkRequest request: goGreenEnterprise.getWorkQueue().getWorkRequestlist()){
            for(Budget budget: request.getBudgetList()){
                totalEventBudgetOfOrg=0;
                for(Event event: tempEventList){
                    if(event.getOrganisationOfEvent().equalsIgnoreCase(budget.getOrgName())){
                        System.out.println("event list: "+budget.getEventList().size());
                        budget.getEventList().add(event);
                        totalEventBudgetOfOrg+=event.getEventBudget();
                        
                    }
                    budget.setOrgAdditionalBudget(totalEventBudgetOfOrg);
                    
                }
            }
        }

        for(WorkRequest request: goGreenEnterprise.getWorkQueue().getWorkRequestlist()){
            request.setApprovalStatus("Approval_Needed");
            request.setMessage("Budget request sent to Mayor for approval");
            request.setReceiver(Role.RoleType.SystemAdminRole);
            request.setSender(userAccount);
            request.setStatus("Approval_Needed");
        }
        
        for(Enterprise ent: business.getEnterpriseDirectory().getEnterpriseList()){
            ent.getWorkQueue().setWorkRequestlist(goGreenEnterprise.getWorkQueue().getWorkRequestlist());
        }
        System.out.println("Workqueue size: "+goGreenEnterprise.getWorkQueue().getWorkRequestlist().size());
        JOptionPane.showMessageDialog(null, "Budget has been sent to Mayor for final approval", "Info", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_submitBtnActionPerformed

    private void comboOrgTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOrgTypeActionPerformed
        comboEvent.setEnabled(true);
        btnRemoveEvent.setEnabled(true);
        submitBtn.setEnabled(true);
        addEventBtn.setEnabled(true);
        comboEvent.removeAllItems();
        
        populateEventList();
    }//GEN-LAST:event_comboOrgTypeActionPerformed

    private void comboEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEventActionPerformed
//        
//        for(Event e: business.getEventDirectory().getEventList()){
//            if(comboOrgType.getSelectedItem().toString().equalsIgnoreCase(e.getEventName())){
//                tempEventList.add(e);
//                totalEventBudget = totalEventBudget + (int)e.getEventBudget();
//                txtAdditionalBudget.setText(String.valueOf(totalEventBudget));
//            }
//        }
//        populateTable();

    }//GEN-LAST:event_comboEventActionPerformed

    private void btnRemoveEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveEventActionPerformed
        int selectedRow = eventTable.getSelectedRow();
        Event event1 = new Event();
        boolean matchFound = false;
        if(selectedRow<0){
                  JOptionPane.showMessageDialog(null, "Please select a row from table", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        String eventName = eventTable.getValueAt(selectedRow, 2).toString();
        for(Event event: tempEventList){
            if(eventName.equalsIgnoreCase(String.valueOf(event.getEventName()))){
                matchFound = true;
                event1 = event;
                break;
            }
        }
        tempEventList.remove(event1);
        totalEventBudget = totalEventBudget - (int)event1.getEventBudget();
        txtAdditionalBudget.setText(String.valueOf(totalEventBudget));
        populateTable();
        // txtCommission.setText(String.format("%.2f",(totalPrice*8.55)/100));
    }//GEN-LAST:event_btnRemoveEventActionPerformed

    private void btnAddEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEventActionPerformed
       
        for(Event e: business.getEventDirectory().getEventList()){
            if(comboEvent.getSelectedItem().toString().equalsIgnoreCase(e.getEventName())){
                tempEventList.add(e);
                totalEventBudget = totalEventBudget + (int)e.getEventBudget();
                txtAdditionalBudget.setText(String.valueOf(totalEventBudget));
            }
        }
        populateTable();
        
    }//GEN-LAST:event_btnAddEventActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEventBtn;
    private javax.swing.JLabel additionalBudgetLbl;
    private javax.swing.JLabel approvedBudgetLbl;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnAddEvent;
    private javax.swing.JButton btnRemoveEvent;
    private javax.swing.JComboBox comboEvent;
    private javax.swing.JComboBox comboOrgType;
    private javax.swing.JTable eventTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTextField txtAdditionalBudget;
    private javax.swing.JTextField txtApprovedBudget;
    // End of variables declaration//GEN-END:variables

}
